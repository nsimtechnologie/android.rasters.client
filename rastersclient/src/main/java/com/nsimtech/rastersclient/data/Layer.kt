/**
* Rasters API
* No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
*
* OpenAPI spec version: v2
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package com.nsimtech.rastersclient.data

import com.nsimtech.rastersclient.data.DataSet
import com.nsimtech.rastersclient.data.MapLayer
import com.nsimtech.rastersclient.data.Serializer.LayerTypeSerializer
import com.nsimtech.rastersclient.data.Serializer.UUIDSerializer

import com.squareup.moshi.Json
import kotlinx.serialization.ContextualSerialization
import kotlinx.serialization.Serializable

/**
 * 
 * @param name 
 * @param theme 
 * @param type 
 * @param projection 
 * @param size 
 * @param owner 
 * @param creationDate 
 * @param updatedDate 
 * @param description 
 * @param isBaseLayer 
 * @param priority 
 * @param organizationId 
 * @param connectorId 
 * @param mapLayers 
 * @param dataSetId 
 * @param dataSet 
 * @param attributes 
 * @param id 
 */
@Serializable
data class Layer (
    val name: kotlin.String,
    val theme: kotlin.String? = null,
    val projection: kotlin.String? = null,
    val size: kotlin.Double? = null,
    val owner: kotlin.String? = null,
    val creationDate: String? = null,
    val updatedDate: String? = null,
    val description: kotlin.String? = null,
    val isBaseLayer: kotlin.Boolean? = null,
    val priority: kotlin.Int? = null,
    val dataSet: DataSet? = null,
    val attributes: kotlin.String? = null,

    @Serializable(with = UUIDSerializer::class)
    val organizationId: java.util.UUID? = null,

    @Serializable(with = UUIDSerializer::class)
    val connectorId: java.util.UUID? = null,

    @Serializable(with = UUIDSerializer::class)
    val id: java.util.UUID? = null,

    @Serializable(with = UUIDSerializer::class)
    val dataSetId: java.util.UUID,

    @ContextualSerialization
    val mapLayers: kotlin.Array<MapLayer>? = null,

    @Serializable(with = LayerTypeSerializer::class)
    val type: Layer.Type
) {

    /**
    * 
    * Values: raster,vector,`annotation`,collect,iot
    */
    enum class Type(val value: kotlin.String){

        @Json(name = "Raster") Raster("Raster"),

        @Json(name = "Vector") Vector("Vector"),

        @Json(name = "Annotation") Annotation("Annotation"),

        @Json(name = "Collect") Collect("Collect"),

        @Json(name = "Iot") Iot("Iot");
    
    }

}

