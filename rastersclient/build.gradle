apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlinx-serialization'

ext.versionMajor = 0
ext.versionMinor = 3
ext.versionPatch = 0
ext.versionClassifier = null
ext.isSnapshot = false
ext.minimumSdkVersion = 23
ext.targetSdkVersion = 23

publish {

    def groupProjectID = 'com.nsimtech.rastersclient'
    def artifactProjectID = 'rastersclient'
    def publishVersionID = generateVersionName()

    userOrg = 'rastersio'
    repoName = 'rasters.client'
    groupId = groupProjectID
    artifactId = artifactProjectID
    publishVersion = publishVersionID
    desc = 'Rest Client for https://api.rasters.io'
    website = 'https://github.com/nsimtechnologie/android.rasters.client.git'

}


android {
    compileSdkVersion 28

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion project.ext.minimumSdkVersion
        targetSdkVersion project.ext.targetSdkVersion
        versionCode generateVersionCode() // 190010203
        versionName generateVersionName() // 1.2.3-SNAPSHOT

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
//    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0-alpha05'
    implementation 'androidx.core:core-ktx:1.2.0-alpha01'
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.2.1'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.31"
    implementation("com.squareup.moshi:moshi-kotlin:1.8.0")
    implementation 'io.data2viz.geojson:geojson-jvm:0.6.0'

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.11.0"

//    debugImplementation 'com.squareup.okhttp3:logging-interceptor:3.14.1'

    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.appcompat:appcompat:1.1.0-alpha05'
    androidTestImplementation 'androidx.core:core-ktx:1.2.0-alpha01'
    androidTestImplementation 'com.squareup.retrofit2:retrofit:2.5.0'
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.1'
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.2.1'
    androidTestImplementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    androidTestImplementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    androidTestImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.31"
    androidTestImplementation("com.squareup.moshi:moshi-kotlin:1.8.0")
    androidTestImplementation 'org.json:json:20180813'

    testImplementation 'androidx.appcompat:appcompat:1.1.0-alpha05'
    testImplementation 'androidx.core:core-ktx:1.2.0-alpha01'
    testImplementation 'com.squareup.retrofit2:retrofit:2.5.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.1'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.2.1'
    testImplementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    testImplementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.31"
    testImplementation("com.squareup.moshi:moshi-kotlin:1.8.0")
    testImplementation 'io.data2viz.geojson:geojson-jvm:0.6.0'
    testImplementation 'org.json:json:20180813'
    testImplementation 'junit:junit:4.13-beta-3'
}
repositories {
    mavenCentral()
}

private Integer generateVersionCode() {
    return ext.minimumSdkVersion * 10000000 + ext.versionMajor * 10000 + ext.versionMinor * 100 + ext.versionPatch
}

private String generateVersionName() {
    String versionName = "${ext.versionMajor}.${ext.versionMinor}.${ext.versionPatch}"
    if (ext.versionClassifier == null && ext.isSnapshot) {
        ext.versionClassifier = "SNAPSHOT"
    }

    if (ext.versionClassifier != null) {
        versionName += "-" + ext.versionClassifier
    }
    return versionName;
}